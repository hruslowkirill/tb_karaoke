version: "2.2"
services:

  app:
    build:
      context: .
      dockerfile: app.dockerfile
    command: ["python3", "manage.py", "runserver", "0.0.0.0:8000"]
    ports:
      - 8000:8000
    volumes:
      - /home/talgat/Desktop/songs_for_bot:/songs_for_bot
      - /home/talgat/tg_bot/media:/app/media
    depends_on:
      - db
      - redis

  celery-worker:
    build:
      context: .
      dockerfile: app.dockerfile
    command: ["celery", "-A", "tb_karaoke", "worker", "--loglevel=info"]
    depends_on:
      - app

  celery-beat:
    build:
      context: .
      dockerfile: app.dockerfile
    command: ["celery", "-A", "tb_karaoke", "beat", "-l", "INFO", "--scheduler", "django_celery_beat.schedulers:DatabaseScheduler"]
    depends_on:
      - app

  bot:
    build:
      context: .
      dockerfile: app.dockerfile
    command: ["python3","manage.py","start_bot"]
    volumes:
      - /home/talgat/tg_bot/media:/app/media
    depends_on:
      - db

  db:
    image: postgres:12.1-alpine
    volumes:
      - pgdata_volume:/var/lib/postgresql/data/
    ports:
      - 5437:5432
    environment:
      - POSTGRES_DB=karaoke
      - POSTGRES_USER=karaoke
      - POSTGRES_PASSWORD=karaokepass

  redis:
    restart: always
    image: redis:latest
    ports:
      - 7385:6379
volumes:
  pgdata_volume: